{"version":3,"sources":["serviceWorker.js","fire.js","Componentes/navbar/Navbar.js","App.js","Componentes/list/List.js","Componentes/addCart/AddCart.js","Router.js","index.js"],"names":["Boolean","window","location","hostname","match","app","firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","Navbars","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggle","bind","assertThisInitialized","state","isOpen","items","itemsRef","fire","database","ref","setState","_this2","on","newPost","push","key","id","val","title","price","removepost","i","length","splice","badges","react_default","a","createElement","reactstrap_es","color","light","expand","Link","to","onClick","navbar","className","pill","React","Component","App","Navbar_Navbars","children","List","datosCarrito","e","newMessageKey","child","concat","set","_this3","data","map","sm","style","padding","body","backgroundColor","marginRight","AddCart","total","sumatotal","Math","round","remove","marginBottom","marginTop","xs","marginLeft","borrar","sumaTotal","Router","BrowserRouter","src_App_0","Route","path","component","Redirect","ReactDOM","render","Router_Router","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b88dc762.chunk.js","sourcesContent":["// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import firebase from 'firebase';\r\n\r\nconst app = firebase.initializeApp({\r\n  apiKey: \"AIzaSyDxDbHDqkstYbrNIGJnVnKTI8vbUICbj7Y\",\r\n  authDomain: \"carrito-de-compras-9ccd6.firebaseapp.com\",\r\n  databaseURL: \"https://carrito-de-compras-9ccd6.firebaseio.com\",\r\n  projectId: \"carrito-de-compras-9ccd6\",\r\n  storageBucket: \"carrito-de-compras-9ccd6.appspot.com\",\r\n  messagingSenderId: \"787501379181\"\r\n});\r\n\r\nexport default app;\r\n","import React from 'react';\r\nimport {\r\n  Collapse,\r\n  Navbar,\r\n  NavbarToggler,\r\n  Nav,\r\n  NavItem,\r\n  NavLink,\r\n  Badge\r\n} from 'reactstrap';\r\n\r\nimport { Link } from 'react-router-dom';\r\nimport fire from '../../fire'\r\n\r\nexport default class Navbars extends React.Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.toggle = this.toggle.bind(this);\r\n    this.state = {\r\n      isOpen: false,\r\n      items: []\r\n    };\r\n    this.itemsRef = fire.database().ref('addCarrito')\r\n  }\r\n  toggle() {\r\n    this.setState({\r\n      isOpen: !this.state.isOpen\r\n    });\r\n  }\r\n  componentDidMount(){\r\n    const { items } = this.state;\r\n\r\n    this.itemsRef.on('child_added', newPost => {\r\n      items.push({\r\n        key: newPost.key,\r\n        id: newPost.val().id,\r\n        title: newPost.val().title,\r\n        price: newPost.val().price,\r\n      })\r\n      this.setState({ items })\r\n    })\r\n\r\n    this.itemsRef.on('child_removed', removepost => {\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (items[i].key === removepost.key) {\r\n          items.splice(i, 1)\r\n        }\r\n      }\r\n      this.setState({ items })\r\n    })\r\n  }\r\n\r\n  \r\n  render() {\r\n  let badges = this.state.items.length;\r\n    return (\r\n      <div>\r\n        <Navbar color=\"light\" light expand=\"md\">\r\n        <Link to=\"/home\">\r\n              <p>Productos</p>\r\n          </Link>\r\n          <NavbarToggler onClick={this.toggle} />\r\n          <Collapse isOpen={this.state.isOpen} navbar>\r\n            <Nav className=\"ml-auto\" navbar>\r\n              <NavItem >\r\n                <div>\r\n                <Link to=\"/addCart\">\r\n                  <p>Carrito: <Badge pill>{badges}</Badge></p>\r\n                </Link>\r\n                </div>\r\n               \r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink ></NavLink>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </Navbar>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n","import React, { Component } from 'react';\r\nimport './App.css';\r\nimport Navbars from './Componentes/navbar/Navbar';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <Navbars />\r\n        {this.props.children}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React, { Component } from 'react';\r\nimport { Card, Button, CardTitle, CardText, Row, Col } from 'reactstrap';\r\nimport fire from './../../fire';\r\n\r\nclass List extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      items: [],\r\n    }\r\n    this.datosCarrito = this.datosCarrito.bind(this);\r\n    this.itemsRef = fire.database().ref('items');\r\n  }\r\n\r\n  datosCarrito(e) {\r\n    const newMessageKey = fire.database().ref().child('addCarrito').push().key;\r\n    fire.database().ref(`addCarrito/${newMessageKey}`).set({\r\n      id: e.id,\r\n      title: e.title,\r\n      price: e.price\r\n    });\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { items } = this.state;\r\n    this.itemsRef.on('child_added', newPost => {\r\n      items.push({\r\n        id: newPost.val().id,\r\n        title: newPost.val().title,\r\n        price: newPost.val().price,\r\n      })\r\n      this.setState({ items })\r\n    })\r\n  }\r\n\r\n \r\n  \r\n\r\n  render() {\r\n\r\n    const data = this.state.items.map((e, i) => (\r\n      <Col sm=\"6\" key={i} style={{padding: \"2em\"}}>\r\n        <Card body >\r\n          <CardTitle><strong>Nombre: </strong> {e.title}</CardTitle>\r\n          <CardText><strong>Precio: </strong> {e.price}</CardText>\r\n          <Button style={{backgroundColor: \"turquoise\"}} onClick={() => this.datosCarrito(e)}>Agregar al carrito</Button>\r\n        </Card>\r\n      </Col>\r\n    ))\r\n\r\n    return (\r\n      <div>\r\n        <h1>Productos</h1>\r\n        <Row style={{ marginRight: \"0px\"}}>\r\n        \r\n          {\r\n            data\r\n          }\r\n        </Row>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\n\r\nexport default List;","import React, { Component } from 'react';\r\nimport fire from './../../fire';\r\nimport { Container, Row, Col, Button } from 'reactstrap';\r\nimport './Style.css'\r\n\r\nclass AddCart extends Component {\r\n  constructor() {\r\n    super();\r\n    this.state = {\r\n      items: []\r\n    }\r\n    this.itemsRef = fire.database().ref('addCarrito')\r\n\r\n  }\r\n\r\n  sumaTotal() {\r\n    let total = this.state.items;\r\n    let sumatotal = 0;\r\n    for (let i = 0; i < total.length; i++) {\r\n      sumatotal = sumatotal + total[i].price\r\n\r\n    }\r\n    return Math.round(sumatotal);\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { items } = this.state;\r\n\r\n    this.itemsRef.on('child_added', newPost => {\r\n      items.push({\r\n        key: newPost.key,\r\n        id: newPost.val().id,\r\n        title: newPost.val().title,\r\n        price: newPost.val().price,\r\n      })\r\n      this.setState({ items })\r\n    })\r\n\r\n    this.itemsRef.on('child_removed', removepost => {\r\n      for (let i = 0; i < items.length; i++) {\r\n        if (items[i].key === removepost.key) {\r\n          items.splice(i, 1)\r\n        }\r\n      }\r\n      this.setState({ items })\r\n    })\r\n\r\n  }\r\n\r\n  borrar(e) {\r\n    this.itemsRef.child(e.key).remove()\r\n  }\r\n\r\n\r\n\r\n  render() {\r\n    return (\r\n      <Container>\r\n        <h2 style={{ marginBottom: \"2em\",marginTop: \"1em\"}}>Tu Carrito de Compras</h2>\r\n        <Row>\r\n          {\r\n            this.state.items.map((e, i) => (\r\n              <Col xs=\"12\" className=\"contenedor\" key={i}>\r\n                <p style={{ marginLeft: \"2em\" }}>\r\n                  <strong>Nombre: </strong>{e.title}\r\n                </p>\r\n                <p style={{ marginLeft: \"2em\" }}>\r\n                  <strong>Precio: </strong>{e.price}\r\n                </p>\r\n                <Button style={{ marginLeft: \"2em\" }} onClick={() => this.borrar(e)}>borrar</Button>\r\n              </Col>\r\n            ))\r\n          }\r\n        </Row>\r\n        <p><strong>Total: </strong> ${this.sumaTotal()}</p>\r\n      </Container>\r\n    )\r\n  }\r\n}\r\n\r\n\r\nexport default AddCart;","import React, { Component } from 'react'\r\nimport { BrowserRouter as ReactRouter, Route, Redirect} from 'react-router-dom';\r\nimport App from './App';\r\nimport List from './Componentes/list/List';\r\nimport AddCart from './Componentes/addCart/AddCart';\r\n\r\nexport default class Router extends Component {\r\n\r\n  render() {\r\n    return (\r\n      <ReactRouter>\r\n        <App>\r\n          <Route path=\"/\" component={() => <Redirect to=\"home\"></Redirect>} ></Route>\r\n          <Route path=\"/home\" component={List}></Route>\r\n          <Route path=\"/addCart\" component={AddCart}></Route>\r\n        </App>\r\n      </ReactRouter>\r\n    )\r\n\r\n  }\r\n}","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport * as serviceWorker from './serviceWorker';\r\nimport Router from './Router';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\n\r\n\r\n\r\n\r\nReactDOM.render(\r\n    <Router />\r\n,\r\n  document.getElementById('root'));\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}